class NumMatrix {
    private int[][] sums;

    public NumMatrix(int[][] matrix) {
        // 定义一个比原数组的长宽都多1的数组，这样就可以用一个循环体完成数组的初始化
        int col = matrix.length > 0 ? matrix[0].length : 0; //存在空数组
        sums = new int[matrix.length + 1][col + 1];
        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < col; j++) {
                // 数组的第i+1，j+1项为原数组从左上角到i，j的矩形区域内所有元素的和
                sums[i + 1][j + 1] = matrix[i][j] + sums[i][j + 1] + sums[i + 1][j] - sums[i][j];
            }
        }
    }
    
    public int sumRegion(int row1, int col1, int row2, int col2) {
        return sums[row2 + 1][col2 + 1] - sums[row2 + 1][col1] - sums[row1][col2 + 1] + sums[row1][col1];
    }
}
